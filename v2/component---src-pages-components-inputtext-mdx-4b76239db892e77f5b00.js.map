{"version":3,"sources":["webpack:///./src/pages/components/inputtext.mdx","webpack:///./src/components/mdx-layout.jsx","webpack:///./node_modules/gatsby-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_4__","assign","mdxType","parentName","className","metastring","live","gatsby__WEBPACK_IMPORTED_MODULE_6__","query","render","_ref2","componentMetadata","_components_PropsTable__WEBPACK_IMPORTED_MODULE_7__","propMetaData","data","_public_static_d_2523477040_json__WEBPACK_IMPORTED_MODULE_2__","isMDXComponent","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_2__","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_2___default","_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__","_CodeBlock__WEBPACK_IMPORTED_MODULE_4__","pre","a","createElement","code","CodeBlock","MDXRenderer","children","renderedChildren","propTypes","PropTypes","oneOfType","string","node","isRequired","__webpack_exports__","React","require","useMDXComponents","mdx","useMDXScope","module","exports","scope","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","map","key","_construct","Function","concat","apply","setPrototypeOf","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","push","instance","bind","arguments","_setPrototypeOf","o","p","__proto__"],"mappings":"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","file":"component---src-pages-components-inputtext-mdx-4b76239db892e77f5b00.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/edx/paragon/www/src/components/mdx-layout.jsx\";\nimport { StaticQuery, graphql } from 'gatsby';\nimport { InputText } from '~paragon-react';\nimport PropsTable from '../../components/PropsTable';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`InputText`}</h1>\n    <h5>{`minimal usage`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"name\"\n  label=\"First Name\"\n  value=\"Foo Bar\"\n/>\n`}</code></pre>\n    <h5>{`read only`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"inputState\"\n  label=\"Input State\"\n  value=\"Read Only\"\n  readOnly\n/>\n`}</code></pre>\n    <h5>{`validation`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  id=\"username\"\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={(value) => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n      };\n    }\n    return feedback;\n  }}\n/>\n`}</code></pre>\n    <h5>{`validation with danger theme`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={(value) => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n        dangerIconDescription: 'Error',\n      };\n    }\n    return feedback;\n  }}\n  themes={['danger']}\n/>\n`}</code></pre>\n    <h5>{`label as element`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"username\"\n  label={<span lang=\"en\">Element</span>}\n  value=\"Label is wrapped in language span\"\n/>\n`}</code></pre>\n    <h5>{`focus test`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`class FocusInputWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: true };\n\n    this.resetStatusAlertWrapperState = this.resetStatusAlertWrapperState.bind(this);\n  }\n\n  resetStatusAlertWrapperState() {\n    this.setState({ open: false });\n    this.inputForm.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <StatusAlert\n          alertType=\"info\"\n          open={this.state.open}\n          dialog=\"Close me to input data!\"\n          onClose={this.resetStatusAlertWrapperState}\n        />\n        <InputText\n          id=\"data\"\n          name=\"data\"\n          label=\"Data Input\"\n          inputRef={(input) => { this.inputForm = input; }}\n        />\n      </div>\n    );\n  }\n}\n`}</code></pre>\n    <h5>{`different textual input types`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<form>\n  <InputText\n    name=\"search\"\n    label=\"Search\"\n    value=\"what is paragon\"\n    type=\"search\"\n    id=\"input-search\"\n  />\n  <InputText\n    name=\"email\"\n    label=\"Email\"\n    value=\"paragon@edx.org\"\n    type=\"email\"\n    id=\"input-email\"\n  />\n  <InputText\n    name=\"url\"\n    label=\"Url\"\n    value=\"https://edx.github.io/paragon\"\n    type=\"url\"\n    id=\"input-url\"\n  />\n  <InputText\n    name=\"telephone\"\n    label=\"Telephone\"\n    value=\"1-(555)-555-5555\"\n    type=\"tel\"\n    id=\"input-tel\"\n  />\n  <InputText\n    name=\"password\"\n    label=\"Password\"\n    value=\"hunter2\"\n    type=\"password\"\n    id=\"input-password\"\n  />\n  <InputText\n    name=\"number\"\n    label=\"Number\"\n    value={42}\n    type=\"number\"\n    id=\"input-number\"\n  />\n  <InputText\n    name=\"datetime-local\"\n    label=\"Date and time\"\n    value=\"2017-04-27T13:45:00\"\n    type=\"datetime-local\"\n    id=\"input-datetime-local\"\n  />\n  <InputText\n    name=\"date\"\n    label=\"Date\"\n    value=\"2017-04-27\"\n    type=\"date\"\n    id=\"input-date\"\n  />\n  <InputText\n    name=\"month\"\n    label=\"Month\"\n    value=\"2017-04\"\n    type=\"month\"\n    id=\"input-month\"\n  />\n  <InputText\n    name=\"week\"\n    label=\"Week\"\n    value=\"2017-W33\"\n    type=\"week\"\n    id=\"input-week\"\n  />\n  <InputText\n    name=\"time\"\n    label=\"Time\"\n    value=\"13:45:00\"\n    type=\"time\"\n    id=\"input-time\"\n  />\n  <InputText\n    name=\"color\"\n    label=\"Color\"\n    value=\"#BF472C\"\n    type=\"color\"\n    id=\"input-color\"\n  />\n</form>\n`}</code></pre>\n    <h5>{`price with step`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"price\"\n  label=\"Price\"\n  type=\"number\"\n  value={3.50}\n  min={0}\n  step={0.01}\n/>\n`}</code></pre>\n    <h5>{`displayed inline`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<InputText\n  name=\"username\"\n  label=\"Username\"\n  value=\"foobar\"\n  inline\n/>\n`}</code></pre>\n    <h5>{`with input group addons`}</h5>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`<form>\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupPrepend={(\n      <div className=\"input-group-text\">\n        {'@'}\n      </div>\n    )}\n  />\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupAppend={(\n      <div className=\"input-group-text\">\n        {'@example.com'}\n      </div>\n    )}\n  />\n  <InputText\n    name=\"money\"\n    label=\"Money\"\n    type=\"number\"\n    value={1000}\n    inputGroupPrepend={(\n      <div className=\"input-group-text\">\n        {'$'}\n      </div>\n    )}\n    inputGroupAppend={(\n      <div className=\"input-group-text\">\n        {'.00'}\n      </div>\n    )}\n  />\n  <InputText\n    name=\"search\"\n    label=\"Search\"\n    value=\"what is paragon\"\n    inputGroupAppend={(\n      <Button\n        buttonType=\"outline-secondary\"\n      >\n        Go\n      </Button>\n    )}\n  />\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupAppend={[\n      <div className=\"input-group-text\">\n        <Icon\n          id=\"checkmark\"\n          className=\"fa fa-check\"\n          screenReaderText=\"Checkmark\"\n        />\n      </div>,\n      <Button\n        buttonType=\"outline-secondary\"\n      >\n        Go\n      </Button>,\n    ]}\n  />\n  <InputText\n    name=\"password\"\n    label=\"Password\"\n    value=\"secret\"\n    inputGroupAppend={(\n      <div className=\"input-group-text\">\n        <Icon\n          id=\"checkmark\"\n          className=\"fa fa-check\"\n          screenReaderText=\"Checkmark\"\n        />\n      </div>\n    )}\n  />\n</form>\n`}</code></pre>\n    <h5>{`Props`}</h5>\n    <StaticQuery query={graphql`query {\n    componentMetadata(displayName: { eq: \"Text\" }) { ...ComponentDocGenData }\n  }`} render={({\n      componentMetadata\n    }) => {\n      if (componentMetadata == null) return null;\n      return <PropsTable propMetaData={componentMetadata.props} mdxType=\"PropsTable\" />;\n    }} mdxType=\"StaticQuery\" />\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InternalMDXRenderer from 'gatsby-mdx/mdx-renderer';\nimport { MDXProvider } from '@mdx-js/react';\nimport CodeBlock from './CodeBlock';\n\nimport '../scss/index.scss';\n\nconst components = {\n  pre: props => <div {...props} />,\n  code: CodeBlock,\n};\n\nexport const MDXRenderer = ({ children }) => {\n  let renderedChildren = children;\n\n  if (typeof renderedChildren === 'string') {\n    renderedChildren = <InternalMDXRenderer>{children}</InternalMDXRenderer>;\n  }\n\n  return (\n    <MDXProvider\n      components={components}\n    >\n      {renderedChildren}\n    </MDXProvider>\n  );\n};\n\nMDXRenderer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n\nexport default props => (\n  <div>\n    <MDXRenderer>{props.children}</MDXRenderer>{/* eslint-disable-line react/prop-types */}\n  </div>\n);\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;"],"sourceRoot":""}