{"version":3,"sources":["webpack:///./src/pages/foundations/colors.jsx"],"names":["utilityClasses","color","level","colors","themeName","unusedLevels","levels","use","selectorColors","__webpack_exports__","_ref2","cssSelectors","data","allCssUtilityClasses","nodes","Object","keys","length","forEach","_ref","selector","declarationFragments","declarations","split","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_seo__WEBPACK_IMPORTED_MODULE_9__","title","map","_ref3","className","_ref4","classNames","unused-level","includes","style","lineHeight","fontSize","_ref5","_ref6","element","_ref7","_ref8","_ref9","flexBasis","_ref10","_ref11","_ref12","_ref13","text-white","query"],"mappings":"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","file":"component---src-pages-foundations-colors-jsx-d23e165a3ae62782ac0f.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport classNames from 'classnames';\nimport SEO from '../../components/seo';\n\nconst utilityClasses = {\n  bg: (color, level) => (level ? `bg-${color}-${level}` : `bg-${color}`),\n  border: (color, level) => (level ? `border-${color}-${level}` : `border-${color}`),\n  text: (color, level) => (level ? `text-${color}-${level}` : `text-${color}`),\n};\n\nconst colors = [\n  { themeName: 'gray', color: 'gray', unusedLevels: [] },\n  { themeName: 'primary', color: 'blue', unusedLevels: [] },\n  { themeName: 'success', color: 'green', unusedLevels: [] },\n  { themeName: 'info', color: 'teal', unusedLevels: [] },\n  { themeName: 'danger', color: 'red', unusedLevels: [] },\n  { themeName: 'warning', color: 'yellow', unusedLevels: [500, 700, 900] },\n];\n\nconst levels = [\n  { level: 100, use: 'Backgrounds' },\n  { level: 200, use: 'Borders & Lines' },\n  { level: 300, use: 'Icons & Semantic State' },\n  { level: 500, use: 'Lighter Text & Element Fills' },\n  { level: 700, use: 'Regular Text & Hover State' },\n  { level: 900, use: 'Darker Text & Active State' },\n];\n\nconst selectorColors = {};\n\nfunction parseColors(cssSelectors) {\n  const colorsAreParsed = Object.keys(selectorColors).length !== 0;\n  if (colorsAreParsed) return;\n\n  cssSelectors.forEach(({ selector, declarations }) => {\n    // All declarations fit this shape: \"background-color: #fff !important;\"\n    const declarationFragments = declarations[0].split(' ');\n    selectorColors[selector] = declarationFragments.length ? declarationFragments[1] : null;\n  });\n}\n\n// eslint-disable-next-line react/prop-types\nexport default function ({ data }) {\n  parseColors(data.allCssUtilityClasses.nodes);\n\n  return (\n    <div>\n\n      <SEO title=\"Colors\" />\n\n      <h1>Colors</h1>\n\n      <h3>Palette</h3>\n\n      <p>\n        Below is an exhaustive set of UI colors. Colors for brands,\n        illustrations, or graphics are not included.\n      </p>\n\n      {levels.map(({ level, use }) => (\n        <div>\n          <h6 className=\"text-muted text-uppercase mb-3 font-weight-normal\">\n            <strong className=\"mr-2\">{level}</strong> {use}\n          </h6>\n          <div className=\"d-flex\">\n            {colors.map(({ themeName, unusedLevels }) => (\n              <div className=\"mr-3 mb-4 w-100\">\n                <div\n                  className={classNames(\n                    'pgn-doc__swatch',\n                    utilityClasses.bg(themeName, level),\n                    {\n                      'unused-level': unusedLevels.includes(level),\n                    },\n                  )}\n                />\n                {unusedLevels.includes(level) ? null : (\n                  <div style={{ lineHeight: 1 }} className=\"mt-1\">\n                    <code className=\"mb-0 d-flex justify-content-between text-lowercase text-gray-700\">\n                      <span>{themeName}</span>\n                      <span>{level}</span>\n                    </code>\n                    <code\n                      style={{ fontSize: '65%' }}\n                      className=\"text-black-50 text-lowercase\"\n                    >\n                      {selectorColors[utilityClasses.bg(themeName, level)]}\n                    </code>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n\n\n      <h3>SCSS Color Usage</h3>\n      <p>\n        Include these colors in scss files using the mixin.\n      </p>\n\n      <code className=\"d-block mb-4 lead bg-gray-100 p-3\">\n        theme-color($color-name, $variant)\n      </code>\n\n      <table className=\"table pgn-doc__table\">\n        <tbody>\n          <tr>\n            <td>\n              <strong>Color Name</strong><br />\n              A theme color\n            </td>\n            <td>\n              {colors.map(({ themeName }) => <code className=\"mr-2\">{themeName}</code>)}\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <strong>Variant</strong><br />\n              <p>A number level or element type</p>\n            </td>\n            <td>\n              <strong className=\"d-block\">Levels </strong>\n              {levels.map(({ level }) => <code className=\"mr-2\">{level}</code>)}\n              <br />\n              <strong className=\"d-block\">Element types </strong>\n              {[\n                'background', 'disabled-border', 'border', 'icon', 'active-border', 'focus',\n                'graphic', 'default', 'light-text', 'hover', 'text', 'active', 'dark-text',\n              ].map(element => <code className=\"mr-2\">{element}</code>)}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <h6>Example</h6>\n      <code className=\"d-block mb-2 bg-gray-100 p-3\">\n        border: solid 1px <strong>theme-color(&ldquo;gray&rdquo;, &ldquo;border&rdquo;)</strong>;\n      </code>\n\n      <code className=\"d-block mb-4 bg-gray-100 p-3\">\n        border: solid 1px <strong>theme-color(&ldquo;gray&rdquo;, 300)</strong>;\n      </code>\n\n      <h3>CSS Class Utilties</h3>\n      <p>Utility classes for backgrounds, borders, and text colors follow the format below:</p>\n      <p><code>{'.{use}-{color}-{level}'}</code></p>\n      <table className=\"table w-50\">\n        <thead>\n          <tr>\n            <th>Use</th>\n            <th>Color</th>\n            <th>Level</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"align-top pr-4\">\n              <code>bg-</code><br />\n              <code>border-</code><br />\n              <code>text-</code><br />\n            </td>\n            <td className=\"align-top pr-4\">\n              {colors.map(({ themeName }) => <code className=\"d-block\">{themeName}-</code>)}\n            </td>\n            <td className=\"align-top pr-4\">\n              {levels.map(({ level }) => <code className=\"d-block\">{level}</code>)}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n\n      <h3>Background Fills</h3>\n      <div className=\"d-flex flex-wrap\">\n        {colors.map(({ themeName }) => (\n          <div style={{ flexBasis: '33%' }}>\n            <div className=\"mr-3 mb-3\">\n              <div className={classNames('p-3 rounded', utilityClasses.bg(themeName, 100))}>\n                <code style={{ color: 'inherit' }}>.{utilityClasses.bg(themeName, 100)}</code>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n\n      <h3>Borders & Lines</h3>\n      <div className=\"d-flex flex-wrap\">\n        {colors.map(({ themeName }) => (\n          <div style={{ flexBasis: '33%' }}>\n            <div className=\"mr-3 mb-3\">\n              <div\n                className={classNames('p-3 rounded border', utilityClasses.border(themeName, 200))}\n              >\n                <code style={{ color: 'inherit' }}>.{utilityClasses.border(themeName, 200)}</code>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n\n      <h3>Icons & Semantic Lines</h3>\n      <div className=\"d-flex flex-wrap\">\n        {colors.map(({ themeName }) => (\n          <div style={{ flexBasis: '33%' }}>\n            <div className=\"mr-3 mb-3\">\n              <div\n                className={classNames('p-3 rounded border', utilityClasses.border(themeName, 300))}\n              >\n                <code style={{ color: 'inherit' }}>.{utilityClasses.border(themeName, 300)}</code>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <h3>Text</h3>\n      <p>Color levels 500 and above are accessible on white and 100 level backgrounds.</p>\n      <div className=\"d-flex rounded overflow-hidden mb-3\">\n        <h6 className=\"mb-0 w-100\">Lighter Text</h6>\n        <h6 className=\"mb-0 w-100\">Regular Text</h6>\n        <h6 className=\"mb-0 w-100\">Darker Text</h6>\n      </div>\n      <div className=\"d-flex\">\n        {[500, 700, 900].map(level => (\n          <div style={{ flexBasis: '33%' }}>\n            {colors.map(({ themeName, unusedLevels }) => {\n              if (unusedLevels.includes(level)) return null;\n              return (\n                <code\n                  className={classNames(\n                    'd-block',\n                    utilityClasses.text(themeName, level),\n                  )}\n                >\n                  .{utilityClasses.text(themeName, level)}\n                </code>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n\n      <h3>Element Fills</h3>\n      <p>Buttons or other interactive elements.</p>\n      <div>\n        <div className=\"d-flex rounded overflow-hidden mb-3\">\n          <div className=\"w-100\">\n            <h6 className=\"mb-0\">Default State</h6>\n          </div>\n          <div className=\"w-100\">\n            <h6 className=\"mb-0\">Hover State</h6>\n          </div>\n          <div className=\"w-100\">\n            <h6 className=\"mb-0\">Active State</h6>\n          </div>\n        </div>\n        {colors.map(({ themeName }) => {\n          if (themeName === 'warning') return null;\n          return (\n            <div className=\"d-flex rounded overflow-hidden mb-3\">\n              <div\n                className={classNames(\n                  'p-3 w-100',\n                  utilityClasses.bg(themeName, 500),\n                  {\n                    'text-white': themeName !== 'light',\n                  },\n                )}\n              >\n                <code style={{ color: 'inherit' }}>.{utilityClasses.bg(themeName, 500)}</code>\n              </div>\n              <div\n                className={classNames(\n                  'p-3 w-100',\n                  utilityClasses.bg(themeName, 700),\n                  {\n                    'text-white': themeName !== 'light',\n                  },\n                )}\n              >\n                <code style={{ color: 'inherit' }}>.{utilityClasses.bg(themeName, 700)}</code>\n              </div>\n              <div\n                className={classNames(\n                  'p-3 w-100',\n                  utilityClasses.bg(themeName, 900),\n                  {\n                    'text-white': themeName !== 'light',\n                  },\n                )}\n              >\n                <code style={{ color: 'inherit' }}>.{utilityClasses.bg(themeName, 900)}</code>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\n\nexport const query = graphql`\n{\n  allCssUtilityClasses(\n    filter: {declarations: {regex: \"/color/\"}, isUtility: {eq: true}},\n    sort: {fields: selector, order: ASC}\n  ) {\n    nodes {\n      selector\n      declarations\n    }\n    distinct(field: selector)\n  }\n}\n`;\n"],"sourceRoot":""}