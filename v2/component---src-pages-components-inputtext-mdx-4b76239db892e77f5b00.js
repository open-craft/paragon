(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{817:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",function(){return o}),t.d(n,"default",function(){return d});t(16);var a=t(11),r=t.n(a),l=t(844),u=(t(3),t(91)),i=t(840),p=t(6),s=t(10),o={},c={_frontmatter:o},m=i.a;function d(e){var n=e.components,t=r()(e,["components"]);return Object(u.mdx)(m,Object.assign({},c,t,{components:n,mdxType:"MDXLayout"}),Object(u.mdx)("h1",null,"InputText"),Object(u.mdx)("h5",null,"minimal usage"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  name="name"\n  label="First Name"\n  value="Foo Bar"\n/>\n')),Object(u.mdx)("h5",null,"read only"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  name="inputState"\n  label="Input State"\n  value="Read Only"\n  readOnly\n/>\n')),Object(u.mdx)("h5",null,"validation"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  id="username"\n  name="username"\n  label="Username"\n  description="The unique name that identifies you throughout the site."\n  validator={(value) => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: \'Username must be at least 3 characters in length.\',\n      };\n    }\n    return feedback;\n  }}\n/>\n')),Object(u.mdx)("h5",null,"validation with danger theme"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),"<InputText\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={(value) => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n        dangerIconDescription: 'Error',\n      };\n    }\n    return feedback;\n  }}\n  themes={['danger']}\n/>\n")),Object(u.mdx)("h5",null,"label as element"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  name="username"\n  label={<span lang="en">Element</span>}\n  value="Label is wrapped in language span"\n/>\n')),Object(u.mdx)("h5",null,"focus test"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'class FocusInputWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: true };\n\n    this.resetStatusAlertWrapperState = this.resetStatusAlertWrapperState.bind(this);\n  }\n\n  resetStatusAlertWrapperState() {\n    this.setState({ open: false });\n    this.inputForm.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <StatusAlert\n          alertType="info"\n          open={this.state.open}\n          dialog="Close me to input data!"\n          onClose={this.resetStatusAlertWrapperState}\n        />\n        <InputText\n          id="data"\n          name="data"\n          label="Data Input"\n          inputRef={(input) => { this.inputForm = input; }}\n        />\n      </div>\n    );\n  }\n}\n')),Object(u.mdx)("h5",null,"different textual input types"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<form>\n  <InputText\n    name="search"\n    label="Search"\n    value="what is paragon"\n    type="search"\n    id="input-search"\n  />\n  <InputText\n    name="email"\n    label="Email"\n    value="paragon@edx.org"\n    type="email"\n    id="input-email"\n  />\n  <InputText\n    name="url"\n    label="Url"\n    value="https://edx.github.io/paragon"\n    type="url"\n    id="input-url"\n  />\n  <InputText\n    name="telephone"\n    label="Telephone"\n    value="1-(555)-555-5555"\n    type="tel"\n    id="input-tel"\n  />\n  <InputText\n    name="password"\n    label="Password"\n    value="hunter2"\n    type="password"\n    id="input-password"\n  />\n  <InputText\n    name="number"\n    label="Number"\n    value={42}\n    type="number"\n    id="input-number"\n  />\n  <InputText\n    name="datetime-local"\n    label="Date and time"\n    value="2017-04-27T13:45:00"\n    type="datetime-local"\n    id="input-datetime-local"\n  />\n  <InputText\n    name="date"\n    label="Date"\n    value="2017-04-27"\n    type="date"\n    id="input-date"\n  />\n  <InputText\n    name="month"\n    label="Month"\n    value="2017-04"\n    type="month"\n    id="input-month"\n  />\n  <InputText\n    name="week"\n    label="Week"\n    value="2017-W33"\n    type="week"\n    id="input-week"\n  />\n  <InputText\n    name="time"\n    label="Time"\n    value="13:45:00"\n    type="time"\n    id="input-time"\n  />\n  <InputText\n    name="color"\n    label="Color"\n    value="#BF472C"\n    type="color"\n    id="input-color"\n  />\n</form>\n')),Object(u.mdx)("h5",null,"price with step"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  name="price"\n  label="Price"\n  type="number"\n  value={3.50}\n  min={0}\n  step={0.01}\n/>\n')),Object(u.mdx)("h5",null,"displayed inline"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<InputText\n  name="username"\n  label="Username"\n  value="foobar"\n  inline\n/>\n')),Object(u.mdx)("h5",null,"with input group addons"),Object(u.mdx)("pre",null,Object(u.mdx)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"live=true",live:"true"}),'<form>\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupPrepend={(\n      <div className="input-group-text">\n        {\'@\'}\n      </div>\n    )}\n  />\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupAppend={(\n      <div className="input-group-text">\n        {\'@example.com\'}\n      </div>\n    )}\n  />\n  <InputText\n    name="money"\n    label="Money"\n    type="number"\n    value={1000}\n    inputGroupPrepend={(\n      <div className="input-group-text">\n        {\'$\'}\n      </div>\n    )}\n    inputGroupAppend={(\n      <div className="input-group-text">\n        {\'.00\'}\n      </div>\n    )}\n  />\n  <InputText\n    name="search"\n    label="Search"\n    value="what is paragon"\n    inputGroupAppend={(\n      <Button\n        buttonType="outline-secondary"\n      >\n        Go\n      </Button>\n    )}\n  />\n  <InputText\n    name="username"\n    label="Username"\n    value="foobar"\n    inputGroupAppend={[\n      <div className="input-group-text">\n        <Icon\n          id="checkmark"\n          className="fa fa-check"\n          screenReaderText="Checkmark"\n        />\n      </div>,\n      <Button\n        buttonType="outline-secondary"\n      >\n        Go\n      </Button>,\n    ]}\n  />\n  <InputText\n    name="password"\n    label="Password"\n    value="secret"\n    inputGroupAppend={(\n      <div className="input-group-text">\n        <Icon\n          id="checkmark"\n          className="fa fa-check"\n          screenReaderText="Checkmark"\n        />\n      </div>\n    )}\n  />\n</form>\n')),Object(u.mdx)("h5",null,"Props"),Object(u.mdx)(p.b,{query:"2523477040",render:function(e){var n=e.componentMetadata;return null==n?null:Object(u.mdx)(s.a,{propMetaData:n.props,mdxType:"PropsTable"})},mdxType:"StaticQuery",data:l}))}d.isMDXComponent=!0},840:function(e,n,t){"use strict";var a=t(3),r=t.n(a),l=t(8),u=t.n(l),i=t(841),p=t.n(i),s=t(91),o=t(151),c=(t(222),{pre:function(e){return r.a.createElement("div",e)},code:o.a}),m=function(e){var n=e.children,t=n;return"string"==typeof t&&(t=r.a.createElement(p.a,null,n)),r.a.createElement(s.MDXProvider,{components:c},t)};m.propTypes={children:u.a.oneOfType([u.a.string,u.a.node]).isRequired},n.a=function(e){return r.a.createElement("div",null,r.a.createElement(m,null,e.children))}},841:function(e,n,t){var a=t(842);t(41),t(38),t(34),t(58);var r=t(13),l=t(11),u=t(3),i=t(91),p=i.useMDXComponents,s=i.mdx,o=t(150).useMDXScope;e.exports=function(e){var n=e.scope,t=e.components,i=e.children,c=l(e,["scope","components","children"]),m=p(t),d=o(n),b=u.useMemo(function(){if(!i)return null;var e=r({React:u,mdx:s},d),n=Object.keys(e),t=n.map(function(n){return e[n]});return a(Function,["_fn"].concat(n,[""+i])).apply(void 0,[{}].concat(t))},[i,n]);return u.createElement(b,r({components:m},c))}},842:function(e,n,t){var a=t(843);function r(n,t,l){return!function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?e.exports=r=function(e,n,t){var r=[null];r.push.apply(r,n);var l=new(Function.bind.apply(e,r));return t&&a(l,t.prototype),l}:e.exports=r=Reflect.construct,r.apply(null,arguments)}e.exports=r},843:function(e,n){function t(n,a){return e.exports=t=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},t(n,a)}e.exports=t},844:function(e){e.exports={data:{componentMetadata:{displayName:"Text",props:[{defaultValue:{value:"undefined"},name:"className",type:{name:"string",raw:null,value:null},required:!1,docblock:"",doclets:[]},{defaultValue:{value:"undefined"},name:"inputRef",type:{name:"func",raw:null,value:null},required:!1,docblock:"",doclets:[]},{defaultValue:{value:"'text'"},name:"type",type:{name:"string",raw:null,value:null},required:!1,docblock:"",doclets:[]}]}}}}}]);
//# sourceMappingURL=component---src-pages-components-inputtext-mdx-4b76239db892e77f5b00.js.map