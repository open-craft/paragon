{"version":3,"sources":["webpack:///./src/components/MeasuredItem.jsx","webpack:///./src/pages/foundations/typography.jsx"],"names":["MeasuredItem","props","_this","_React$Component","call","this","initialMeasurements","properties","reduce","acc","property","state","item","React","createRef","componentDidMount","setTimeout","measure","bind","computedStyle","getComputedStyle","current","measurements","getPropertyValue","setState","render","react_default","a","createElement","Fragment","renderBefore","cloneElement","children","ref","renderAfter","Component","propTypes","PropTypes","arrayOf","string","func","node","isRequired","defaultProps","undefined","weightLabels","200","300","400","500","600","700","800","measuredTypeProps","fontFamily","split","weight","className","__webpack_exports__","seo","title","style","fontWeight","colSpan","map","headingSize","MeasuredItem_MeasuredItem","maxWidth"],"mappings":"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","file":"component---src-pages-foundations-typography-jsx-8d9f28d0103b1757f486.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MeasuredItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const initialMeasurements = props.properties\n      .reduce((acc, property) => {\n        acc[property] = null;\n        return acc;\n      }, {});\n\n    this.state = initialMeasurements;\n    this.item = React.createRef();\n  }\n\n  componentDidMount() {\n    // Needs a moment to render children to DOM first.\n    setTimeout(this.measure.bind(this), 10);\n  }\n\n  measure() {\n    const computedStyle = getComputedStyle(this.item.current);\n    const measurements = this.props.properties\n      .reduce((acc, property) => {\n        acc[property] = computedStyle.getPropertyValue(property);\n        return acc;\n      }, {});\n\n    this.setState(measurements);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.renderBefore ? this.props.renderBefore(this.state) : null}\n        {React.cloneElement(this.props.children, { ref: this.item })}\n        {this.props.renderAfter ? this.props.renderAfter(this.state) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\n","import React from 'react';\nimport SEO from '../../components/seo';\nimport MeasuredItem from '../../components/MeasuredItem';\n\n\nconst weightLabels = {\n  200: 'Light',\n  300: 'Light',\n  400: 'Regular',\n  500: 'Medium',\n  600: 'Medium',\n  700: 'Bold',\n  800: 'Black',\n};\n\nconst measuredTypeProps = {\n  properties: ['font-size', 'line-height', 'font-family', 'font-weight'],\n  renderAfter: (measurements) => {\n    const fontFamily = measurements['font-family'] ?\n      measurements['font-family'].split(',')[0] : null;\n    const weight = weightLabels[measurements['font-weight']];\n\n    return (\n      <p className=\"m-0 text-muted\">\n        <span className=\"mr-2\">\n          {fontFamily} {weight}\n        </span>\n        {measurements['font-size']} / {measurements['line-height']}\n      </p>\n    );\n  },\n};\n\n\nexport default function () {\n  return (\n    <div>\n      <SEO title=\"Typography\" />\n\n      <h1>Typography</h1>\n\n      <h2>Type</h2>\n      <p>Georgia is our headline attention getter. Roboto is our UI workhorse.</p>\n\n      <p className=\"demo-georgia h1\">Georgia Bold</p>\n      <p className=\"demo-roboto h1\">Roboto Bold</p>\n      <p className=\"demo-roboto h1\" style={{ fontWeight: '500' }}>Roboto Medium</p>\n      <p className=\"demo-roboto h1 font-weight-normal\">Roboto Regular</p>\n\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Headings</h2>\n              <p className=\"font-weight-normal\">Headings all share a line-height of 1.25em</p>\n            </th>\n          </tr>\n          <tr>\n            <th>Desktop</th>\n            <th>Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          {[1, 2, 3, 4, 5, 6].map(headingSize => (\n            <tr>\n              <td>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className={`m-0 h${headingSize}`}>Header {headingSize}</p>\n                </MeasuredItem>\n              </td>\n              <td className=\"mobile-type\">\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className={`m-0 h${headingSize}`}>Header {headingSize}</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.h{headingSize}</code>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Body</h2>\n              <p className=\"font-weight-normal\">Body text line-heights are 1.5em</p>\n            </th>\n          </tr>\n          <tr>\n            <th colSpan=\"2\">Desktop & Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"lead m-0\">Large Body</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.lead</code>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"m-0\">Body</p>\n              </MeasuredItem>\n            </td>\n            <td />\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"small m-0\">Small Body</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.small</code>\n            </td>\n          </tr>\n        </tbody>\n\n        <tbody>\n          <tr>\n            <th colSpan=\"3\">\n              <h2>Forms</h2>\n              <p className=\"font-weight-normal\">Form text line-heights are the same as headings: 1.25em.</p>\n            </th>\n          </tr>\n          <tr>\n            <th colSpan=\"2\">Desktop & Mobile</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <label className=\"m-0\">Label</label>{/* eslint-disable-line */}\n              </MeasuredItem>\n            </td>\n            <td>\n              <small>Same as h6</small>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"m-0\">Helper</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <small>Same as body</small>\n            </td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <MeasuredItem {...measuredTypeProps}>\n                <p className=\"small m-0\">Helper Small</p>\n              </MeasuredItem>\n            </td>\n            <td>\n              <code>.small</code><br />\n              <small>Same as small body</small>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"2\">\n              <h2>Decoration and Emphasis</h2>\n            </th>\n          </tr>\n          <tr>\n            <th>Style</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td><p className=\"text-lowercase\">Lowercase text.</p></td>\n            <td><code>.text-lowercase</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-uppercase\">uppercase text.</p></td>\n            <td><code>.text-uppercase</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-capitalize\">capitalize text.</p></td>\n            <td><code>.text-capitalize</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-decoration-none\">No decorations.</p></td>\n            <td><code>.text-decoration-none</code></td>\n          </tr>\n\n          <tr>\n            <td><p className=\"text-italic\">Italic text.</p></td>\n            <td><code>.text-italic</code></td>\n          </tr>\n\n          <tr>\n            <td><p className=\"font-weight-bold\">Bold text.</p></td>\n            <td><code>.font-weight-bold</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"font-weight-normal\">Regular text.</p></td>\n            <td><code>.font-weight-normal</code></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <table className=\"w-100 table pgn-doc__status-table\">\n        <tbody>\n          <tr>\n            <th colSpan=\"2\">\n              <h2>Alignment</h2>\n            </th>\n          </tr>\n          <tr>\n            <th>Style</th>\n            <th>CSS Class</th>\n          </tr>\n          <tr>\n            <td><p className=\"text-left\">left text.</p></td>\n            <td><code>.text-left</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-right\">right text.</p></td>\n            <td><code>.text-right</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-center\">center text.</p></td>\n            <td><code>.text-center</code></td>\n          </tr>\n          <tr>\n            <td>\n              <p className=\"text-justify\">justify text.</p>\n              <p className=\"text-justify text-muted small\" style={{ maxWidth: '20rem' }}>\n                At the edge of forever tendrils of gossamer clouds corpus callosum culture\n                Vangelis dispassionate extraterrestrial observer.\n              </p>\n            </td>\n            <td><code>.text-justify</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-wrap\">wrap text.</p></td>\n            <td><code>.text-wrap</code></td>\n          </tr>\n          <tr>\n            <td><p className=\"text-nowrap\">nowrap text.</p></td>\n            <td><code>.text-nowrap</code></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"sourceRoot":""}